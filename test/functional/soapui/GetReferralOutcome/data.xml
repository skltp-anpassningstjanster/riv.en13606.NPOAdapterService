<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements. See the NOTICE file
distributed with this work for additional information
regarding copyright ownership. Sveriges Kommuner och Landsting licenses this file
to you under the Apache License, Version 2.0 (the
        "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied. See the License for the
specific language governing permissions and limitations
under the License.
-->
<testsuite>
    <id>GetReferralOutcome</id>
    <description>This testsuite is designed to verify the GetReferralOutcome contract.</description>
    <globaldata>
        <webServiceUrl>https://qa.esb.ntjp.se:443/vp/clinicalprocess/healthcond/actoutcome/GetReferralOutcome/3/rivtabp21</webServiceUrl>
    </globaldata>
    <testcase id="Date Boundaries">
        <description>Verifies that the result only contains information within the date boundaries for the given patient.<br/>
            This test will require at least eight ReferralOutcome records:
            <ol>
                <li>A record with DocumentTime within the given range, the AuthorTime and SignatureTime should
                before or after the given range.</li>
                <li>A record with AuthorTime within the given range, the DocumentTime and SignatureTime should
                before or after the given range.</li>
                <li>A record with SignatureTime within the given range, the DocumentTime and AuthorTime should
                before or after the given range.</li>
                <li>A record with DocumentTime and AuthorTime within the given range, the SignatureTime should
                before or after the given range.</li>
                <li>A record with DocumentTime and SignatureTime within the given range, the AuthorTime should
                before or after the given range.</li>
                <li>A record with SignatureTime and AuthorTime within the given range, the DocumentTime should
                before or after the given range.</li>
                <li>A record with SignatureTime, DocumentTime and AuthorTime within the given range.</li>
                <li>A record with SignatureTime, DocumentTime and AuthorTime outside the given range.</li>
            </ol>
            The DocumentId's of case 1-7 should be added as a comma-separated list in the
                expectedDocumentIds field.<br/>
            The DocumentId's of case 8 should be added in the unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of ReferralOutcome records.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601011212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <timePeriodStart>20130801</timePeriodStart>
            <timePeriodEnd>20130831</timePeriodEnd>
            <!-- Add a list of comma-separated ids that at least should be included in the response -->
            <expectedDocumentIds>774411,774412,774413</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that should not be included in the response -->
            <unexpectedDocumentIds>11,12,13</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="CareUnitHsaId Filter">
        <description>Verifies that the result only contains information with correct CareUnitHsaId for the given patient.<br/>
            The patient should have several ReferralOutcome records, with at least one record from the given CareUnitHsaId.<br/>
            The DocumentId's of the expected ReferralOutcome records should be added as a comma-separated list in the
            expectedDocumentIds field.<br/>
            The DocumentId's of ReferralOutcome records from other CareUnit's should be added as a comma-separated list in the
            unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of ReferralOutcome records.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <careUnitHSAid>123465</careUnitHSAid>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
            <!-- Add a list of comma-separated ids that at least should be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that should not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="Only PatientId">
        <description>Verifies that the result only contains information with correct PatientId.
            Enter a PatientId that is stored in the source system.<br/>
            The DocumentId's of the expected ReferralOutcome records should be added as a comma-separated list in the
            expectedDocumentIds field.<br/>
            The DocumentId's of ReferralOutcome records from other CareUnit's should be added as a comma-separated list in the
            unexpectedDocumentIds field.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of ReferralOutcome records.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <!-- Add a list of comma-separated ids that at least should be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that should not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="NonExisting PatientId">
        <description>Verifies that the service returns an empty result instead of a Soap Fault if a non-existing PatientId is given.<br/>
            Enter a PatientId that is not found in the source system.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>1234567890</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
        </data>
    </testcase>
    <testcase id="CareContactId Filter">
        <description>Verifies that the result only contains information for a single CareContact.<br/>
            Enter a PatientId, CareContactId and SourceSystemHSAid that is stored in the source system.<br/>
            Add one or more DocumentId's of records that should be included in the response based on the
            filtering rules to the field 'expectedDocumentIds'.<br/>
            Add one or more DocumentId's of records that should not be included in the response based on the
            filtering rules to the field 'unexpectedDocumentIds'.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of ReferralOutcome records.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>566710</careContactId>
            <sourceSystemHSAid>12</sourceSystemHSAid>
            <!-- Add a list of comma-separated ids that at least should be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that should not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="NonExisting CareContactId">
        <description>Verifies that the service returns an empty result instead of a Soap Fault if a non-existing
            CareContactId is given.<br/>
            Enter a PatientId that exists in the source system and a CareContactId and sourceSystemHSAid that is not found in the source system.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of ReferralOutcome records.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
        </data>
    </testcase>
    <testcase id="Http-header Filter">
        <description>Verifies that the result only contains information with correct PatientId, and that the source
            system should filter ReferralOutcome records based on the HttpHeader 'x-rivta-original-serviceconsumer-hsaid'.<br/>
            Enter a PatientId that has more than one VaccinationMedicalRecord in the source system.<br/>
            Add one or more DocumentId's of records that should be included in the response based on the
            filtering rules to the field 'expectedDocumentIds'.<br/>
            Add one or more DocumentId's of records that should not be included in the response based on the
            filtering rules to the field 'unexpectedDocumentIds'.<br/>
            The field logicalAddress should contain a value that does not affect the list of CareContacts.
        </description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <!-- Add a list of comma-separated ids that at least should be included in the response -->
            <expectedDocumentIds>774411,774412</expectedDocumentIds>
            <!-- Add a list of comma-separated ids that should not be included in the response -->
            <unexpectedDocumentIds>123456</unexpectedDocumentIds>
        </data>
    </testcase>
    <testcase id="CareContactId and SourceSystemHsaId">
        <description>The test verifies that the source system returns a Soap Fault if the sourceSystemHSAid
            is empty when careContactId has a value.<br/>
            Enter a PatientId and a CareContactId of a CareContact that should be found in the source system.<br/>
            The fields httpHeaderHsaId and logicalAddress should contain values that does not affect the list of CareContacts.</description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>112233</logicalAddress>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
        </data>
    </testcase>
    <testcase id="SourceSystemHsaId and LogicalAddress">
        <description>The test verifies that the source system returns a Soap Fault if the logicalAddress and
            sourceSystemHSAid doesn't match.<br/>
            Enter PatientId and a CareContactId and the correct SourceSystemHSAid of a CareContact that should be found in the source system.<br/>
            The field logicalAddress should not match SourceSystemHSAid.<br/>
            The field httpHeaderHsaId should contain a value that does not affect the list of records.</description>
        <data>
            <httpHeaderHsaId>112233</httpHeaderHsaId>
            <logicalAddress>987654321</logicalAddress>
            <careUnitHSAid>1123465</careUnitHSAid>
            <patientId>7601021212</patientId>
            <patientIdType>1.2.752.129.2.1.3.1</patientIdType>
            <careContactId>1122334455</careContactId>
            <sourceSystemHSAid>112233</sourceSystemHSAid>
        </data>
    </testcase>
</testsuite>
